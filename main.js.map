{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/books/books.component.css","webpack:///./src/app/books/books.component.html","webpack:///./src/app/books/books.component.ts","webpack:///./src/app/favorites/favorites.component.css","webpack:///./src/app/favorites/favorites.component.html","webpack:///./src/app/favorites/favorites.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/single-book/single-book.component.css","webpack:///./src/app/single-book/single-book.component.html","webpack:///./src/app/single-book/single-book.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{RouterModule, Router} from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http'\nimport { UserService } from './user.service';\nimport {FormsModule} from '@angular/forms';\nimport { BooksComponent } from './books/books.component';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport { SingleBookComponent } from './single-book/single-book.component';\nimport { FavoritesComponent } from './favorites/favorites.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    BooksComponent,\n    SingleBookComponent,\n    FavoritesComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot([\n   {path:'login',component:LoginComponent},\n   {path:'signup',component:SignupComponent},\n   {path:'',redirectTo:'login',pathMatch:'full'},\n   {path:'books',component:BooksComponent},\n   {path:'single-book/:id',component:SingleBookComponent},\n   {path:'favorites',component:FavoritesComponent}\n    ]),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    NgxSpinnerModule\n  ],\n\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".search{\\r\\n    width:300px;\\r\\n}\\r\\n.para{\\r\\n    background:black;\\r\\n    color:orange;\\r\\n    font-size:25px;\\r\\n    padding:3%;\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.head{\\r\\n    color:orange;\\r\\n}\\r\\n.menu{\\r\\n    margin-bottom:2%;\\r\\n    font-size:20px;\\r\\n    text-align:center;\\r\\n}\\r\\n.menu:hover{\\r\\n    cursor: pointer;\\r\\n    background: gainsboro;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <p class=\\\"para\\\">FinvestFX Book App</p>\\n    </div>\\n   <div class=\\\"col-4 menu\\\">Welcome {{name}}</div>\\n   <div class=\\\"col-4 menu\\\" [routerLink]=\\\"['/favorites']\\\">Favourites</div>\\n   <div (click)=logout() class=\\\"col-4 menu\\\">Logout</div>\\n    <div class=\\\"col-12 mt-2\\\">\\n      <form>\\n        <h5 class=\\\"md-1 head\\\">Search For Books:</h5>\\n        <input type=\\\"text\\\" class=\\\"form-control search\\\" name=\\\"book\\\" [(ngModel)]=\\\"book\\\">\\n        <br>\\n        <button (click)=search() class=\\\"btn\\\">Search</button>\\n      </form>\\n    </div>\\n  </div>\\n  <h5 class=\\\"mt-3 mb-2  head\\\">SEARCH RESULT:</h5>\\n  <div class=\\\"row\\\" *ngIf=\\\"searchResult\\\">\\n    <div class=\\\"col-12 mt-2 mb-2 text-left\\\" *ngFor=\\\"let search of searchResult\\\">\\n      <ul>\\n        <li>\\n          <div class=\\\"book-image\\\">\\n            <img class=\\\"img-thumbnail\\\" src=\\\"{{search.volumeInfo.imageLinks.thumbnail}}\\\">\\n          </div>\\n          <div class=\\\"book-details mt-2\\\">\\n            Title : {{search.volumeInfo.title}}\\n            <br> Authors : {{search.volumeInfo.authors}}\\n            <br> Publisher : {{search.volumeInfo.publisher}}\\n            <br>\\n            <button class=\\\"btn mt-2\\\" [routerLink]=\\\"['/single-book',search.id]\\\">View</button>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<ngx-spinner>\\n  <p style=\\\"font-size: 16px; color:white\\\">Searching...</p>\\n</ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../user.service';\nimport {Cookie} from 'ng2-cookies';\nimport { Router } from '../../../node_modules/@angular/router';\n\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\n\nexport class BooksComponent implements OnInit {\n\n  public book: string\n  public searchResult: any;\n  public name;\n  public userID;\n  constructor(public http: HttpClient, public toastr: ToastrService, public userService: UserService\n  ,public router:Router) { }\n\n  ngOnInit() { \n    this.name=Cookie.get('userName')\n    this.userID=Cookie.get('userId')\n  }\n  public search = () => {\n    this.userService.searchAllBooks(this.book).subscribe((result: any) => {\n      this.searchResult = result.items\n      console.log(this.searchResult)\n    })\n  }\n  public logout=()=>{\n    Cookie.delete('userId');\n    Cookie.delete('userName');\n    this.userID='';\n    this.name='';\n    setTimeout(()=>{\n      this.router.navigate(['/login'])\n      this.toastr.success(\"Logout Successfull\")\n    },1000)\n    \n  }\n}\n","module.exports = \".para{\\r\\n    background:black;\\r\\n    color:orange;\\r\\n    font-size:23px;\\r\\n    padding:3%;\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <p class=\\\"para\\\">All Favorites!</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-left mt-3\\\" *ngIf=allBooks>\\r\\n        <div *ngFor=\\\"let book of allBooks\\\" class=col-md-12>\\r\\n            <ul>\\r\\n                <li>\\r\\n                    <div class=\\\"book-image\\\">\\r\\n                        <img class=\\\"img-thumbnail\\\" src=\\\"{{book.volumeInfo.imageLinks.thumbnail}}\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"book-details mt-2\\\">\\r\\n                        Title : {{book.volumeInfo.title}}\\r\\n                        <br> Authors : {{book.volumeInfo.authors}}\\r\\n                        <br> Publisher : {{book.volumeInfo.publisher}}\\r\\n                        <br>\\r\\n                        <button class=\\\"btn mt-2\\\" [routerLink]=\\\"['/single-book',book.id]\\\">View</button>\\r\\n                        <br>\\r\\n                        <button class=\\\"btn btn-danger mt-2\\\" (click)=remove(book.id)>Remove</button>\\r\\n                    </div>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {Cookie} from 'ng2-cookies'\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\npublic name:any;\npublic userID:any;\npublic result:any;\npublic allBooks=[];\n  constructor(public toastr:ToastrService,public userService:UserService) { }\n\n  ngOnInit() {\n    this.name=Cookie.get(\"userName\")\n    this.userID=Cookie.get(\"userId\")\n    this.getAllfavs()\n  \n  }\n  public getAllfavs=()=>{\n  this.userService.allfavs(this.userID).subscribe((result:any)=>{\n    \n    if(result.status==200){\n    this.toastr.info(result.message)\n    for(var x of result.data){\n     this.userService.getSingleBook(x.bookId).subscribe((result)=>{\n       this.allBooks.push(result)\n\n     })\n    }\n    }\n    else{\n    this.toastr.warning(result.message)\n    }\n    \n  },(error)=>{\n    this.toastr.error(\"Error Occured\")\n  })\n}\npublic remove=(id)=>{\n  this.userService.removefavs(id).subscribe((apiResponse:any)=>{\n    this.toastr.warning(apiResponse.message)\n    this.allBooks=[]\n    this.getAllfavs()\n  })\n}\n\n}\n\n\n\n","module.exports = \".para{\\r\\n    background:black;\\r\\n    color:orange;\\r\\n    font-size:23px;\\r\\n    padding:3%;\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.para2{\\r\\n    font-size:20px;\\r\\n}\\r\\n.para3{\\r\\n    font-size: 20px;\\r\\n    background-color: gainsboro;\\r\\n    color:black;\\r\\n}\\r\\n.para3:hover{\\r\\n    background-color:lightslategray;\\r\\n    cursor: pointer;\\r\\n    font-size:25px;\\r\\n    color:black;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <p class=\\\"para\\\">FinvestFX Book App</p>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n            <p class=\\\"para2\\\">Don't Have An Account?</p>\\n            <span class=\\\"para3\\\" [routerLink]=\\\"['/signup']\\\">Click To Sign-Up</span>\\n            <br>\\n            <br>\\n            <h4 class=\\\"text-center\\\">Login Here!</h4>\\n            <form>\\n                <label for=\\\"email\\\">Enter Your Email:</label>\\n                <br>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\n                <br>\\n                <label for=\\\"password\\\">Enter Your Password:</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n                <br>\\n                <button (click)=login() class=\\\"btn btn-primary text-white\\\">Login</button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {UserService} from './../user.service'\nimport { Router } from '../../../node_modules/@angular/router';\nimport {Cookie} from 'ng2-cookies'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: string\n  public password: string\n  constructor(public toastr: ToastrService,public userService:UserService,public router:Router) { }\n\n  ngOnInit() { }\n\n  public login = () => {\n    if (!this.email) {\n      this.toastr.warning(\"Email Parameter is Missing\")\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password Parameter is Missing\")\n    }\n    else {\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n    this.userService.loginFunction(data).subscribe((result:any)=>{\n      console.log(result)\n      if(result.status==200){\n      this.toastr.success(result.message)\n      setTimeout(()=>{\n        Cookie.set('userName',result.data.firstName + \" \" + result.data.lastName)\n        Cookie.set('userId',result.data.userId)\n        this.router.navigate(['/books'])\n      },1000)\n    }\n    else{\n      this.toastr.error(result.message)\n    }\n    },(err)=>{\n      this.toastr.error(\"ERROR Occured\")\n    })\n    }\n  }\n}\n","module.exports = \".nav-part1{\\r\\n    font-size:25px;\\r\\n}\\r\\n.nav-part2{\\r\\n    font-size:20px;\\r\\n    margin-left:10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"nav navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand nav-part1\\\">\\n      FinvestFX\\n    </a>\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link nav-part2\\\" [routerLink]=\\\"['/login']\\\">\\n          Login\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n  <br>\\n  <br>\\n  <h4 class=\\\"text-center\\\">Sign Up Here!</h4>\\n  <br>\\n  <form>\\n    <label for=\\\"firstName\\\">Enter First Name:\\n    </label>\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"firstName\\\" class=\\\"form-control\\\" required>\\n    <br>\\n\\n    <label for=\\\"lastName\\\">Enter Last Name:\\n    </label>\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"lastName\\\" class=\\\"form-control\\\" required>\\n    <br>\\n\\n    <label for=\\\"email\\\">Enter Email:\\n    </label>\\n    <br>\\n    <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" required>\\n    <br>\\n\\n    <label for=\\\"password\\\">Enter Password:\\n    </label>\\n    <br>\\n    <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" required>\\n    <br>\\n\\n    <label for=\\\"phone\\\">Enter Phone:\\n    </label>\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"phone\\\" class=\\\"form-control\\\" required>\\n    <br>\\n    <button (click)=signUp() class=\\\"btn btn-primary text-white mb-4\\\">Sign Up</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\nimport {UserService} from './../user.service'\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public email:string;\n  public password:string;\n  public phone:string;\n  public firstName:string;\n  public lastName:string;\n  constructor(public toastr:ToastrService,public userService:UserService,public route:Router){}\n  \n  ngOnInit(){}\n  \n  public gotoSignIn=()=>{\n    this.route.navigate(['/login'])\n  }\n  public signUp=()=>{\n    if(!this.email){\n      this.toastr.warning(\"Email Is Required\")\n    }\n    else if(!this.password){\n      this.toastr.warning(\"Password Is Required\")\n    }\n    else if(!this.firstName){\n      this.toastr.warning(\"Enter Your First Name\")\n    }\n    else if(!this.lastName){\n      this.toastr.warning(\"Enter Your Last Name\")\n    }\n    else if(!this.phone){\n      this.toastr.warning(\"Phone Number Is Missing\")\n    }\n    else{\n      let data={\n        firstName:this.firstName,\n        lastName:this.lastName,\n        email:this.email,\n        password:this.password,\n        phone:this.phone\n      }\n      this.userService.signupFunction(data).subscribe((result)=>{\n        console.log(result)\n        this.toastr.success(\"Sign Up Successfull\")\n        setTimeout(()=>{\n          this.gotoSignIn()\n        },1000)\n      })\n    }\n    \n  }\n}\n","module.exports = \".col-md-6{\\r\\n    font-size:1.3em;\\r\\n}\\r\\n\\r\\n.heading{\\r\\n    color:orange;\\r\\n    background:black;\\r\\n    font-weight: bold;\\r\\n    padding:3%\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngIf=bookData>\\n\\n    <div class=\\\"col-md-12\\\">\\n    \\n<h3 class=\\\"heading text-center mb-3\\\">{{bookData.volumeInfo.title}}</h3>\\n  <button (click)=add(bookData.id,bookData.volumeInfo.title) \\n  class=\\\"btn btn-info mt-3 mb-3\\\">\\n  Add To Favorites.\\n</button>  \\n</div>\\n    <div class=\\\"col-md-6\\\">\\n      Authors:\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.authors}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Published Date:\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.publishedDate}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Publisher:\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.publisher}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Page Count:\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.pageCount}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Height:\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.dimensions.height}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Average Rating :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.averageRating}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Categories :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.categories}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Description :\\n    </div>\\n    <div class=\\\"col-md-6\\\" [innerHTML]=bookData.volumeInfo.description>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Language :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.volumeInfo.language}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Country :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.saleInfo.country}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      List Price :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.saleInfo.listPrice.amount}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Currency Code :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.saleInfo.retailPrice.currencyCode}}\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      Buy-Link :\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      {{bookData.saleInfo.buyLink}}\\n    </div>\\n    \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport {ActivatedRoute} from '@angular/router'\nimport {Cookie} from 'ng2-cookies'\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\n@Component({\n  selector: 'app-single-book',\n  templateUrl: './single-book.component.html',\n  styleUrls: ['./single-book.component.css']\n})\nexport class SingleBookComponent implements OnInit {\n  public bookID:any;\n  public bookData:any;\n  public userId:any;\n  constructor(public userService:UserService,public route:ActivatedRoute,public toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.userId=Cookie.get('userId')\n   this.bookID=this.route.snapshot.paramMap.get('id')\n   this.userService.getSingleBook(this.bookID).subscribe((result:any)=>{\n    this.bookData=result\n    console.log(this.bookData)\n   })\n  }\n  \n  public add=(id,name)=>{\n   this.userService.addtoFav(id,name,this.userId).subscribe((result:any)=>{\n     if(result.status==302){\n       this.toastr.warning(result.message)\n     }\n     else if(result.status==200){\n       this.toastr.success(result.message)\n     }\n     else{\n       this.toastr.error(result.message)\n     }\n     console.log(result)\n   },(error)=>{\n     this.toastr.error(\"Error Occured\")\n   })\n  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpParams} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n\n  public baseurl=\"http://bookback.solitarydev.online/api/v1.0\";\n  public api =\"https://www.googleapis.com/books/v1/volumes?q=\"\n\n  constructor(public http:HttpClient) {}\n\n  public loginFunction=(loginData)=>{\n    const params=new HttpParams()\n    .set('email',loginData.email)\n    .set('password',loginData.password)\n     return this.http.post(`${this.baseurl}/login`,params)\n  }\n  \n  public signupFunction=(signupData)=>{\n    const params=new HttpParams()\n    .set('email',signupData.email)\n    .set('password',signupData.password)\n    .set('phone',signupData.phone)\n    .set('firstName',signupData.firstName)\n    .set('lastName',signupData.lastName)\n    return this.http.post(`${this.baseurl}/signup`,params)\n  }\n  public getSingleBook=(id)=>{\n    console.log(id)\n    return this.http.get(`https://www.googleapis.com/books/v1/volumes/${id}`)\n  }\n\n  public searchAllBooks=(bookName)=>{\n    return this.http.get(`${this.api}${bookName}`)\n  }\n public addtoFav=(id,name,userId)=>{\n   let data={\n     bookId:id,\n     bookName:name,\n     userId:userId\n   }\n   console.log(\"Request Made\");\n   return this.http.post(`${this.baseurl}/adding`,data)\n }\n public allfavs=(id)=>{\n   console.log(\"Id\",id)\nreturn this.http.get(`${this.baseurl}/all/${id}`)\n }\n public removefavs=(id)=>{\n   console.log(\"Service\")\n   return this.http.delete(`${this.baseurl}/remove/${id}`)\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}